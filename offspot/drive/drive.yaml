apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: offspot
  labels:
    app: drive-app
  name: drive-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: drive-app
  template:
    metadata:
      labels:
        app: drive-app
    spec:
      containers:
      - image: ghcr.io/kiwix/nginx-webdav:latest
        imagePullPolicy: Always
        name: nginx
        env:
          - name: NAME
            value: offspot-drive
          - name: USERNAME
            value: admin
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: drive-password
                key: value
                optional: false
        volumeMounts:
        - name: data-volume
          mountPath: "/data"
          readOnly: false
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: drive-local-pvc
      nodeSelector:
        k8s.kiwix.org/role: "storage"
---
apiVersion: v1
kind: Service
metadata:
  namespace: offspot
  name: drive-service
  labels:
    app: drive-app
spec:
  selector:
    app: drive-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: drive-ingress
  namespace: offspot
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 8196m
    # the following is required for DAV renames to work.
    # MOVE command relies on the Destination input header
    # and raises a 400 if the scheme is incorrect (https from ingress vs http in upstream)
    # alternative is to use WebDAV over HTTP and not HTTPs but given those
    # are writable drives, we require authentication and HTTP Basic Auth
    # sends data clearly so any MITM could intercept clear credentials
    nginx.ingress.kubernetes.io/configuration-snippet: |
      set $destination $http_destination;
      if ($destination ~ ^https://(.*)) {
          set $destination http://$1;
          more_set_input_headers "Destination: $destination";
          #more_set_input_headers -t 'text/plain' Destination $destination;
      }
    nginx.ingress.kubernetes.io/server-snippet: |
      location /robots.txt {
        add_header Content-Type "text/plain";
        return 200 "User-agent: *\nDisallow: /";
      }
spec:
  ingressClassName: nginx
  tls:
    - hosts:
      - drive.offspot.it
      secretName: drive-offspot-it-tls
  rules:
  - host: drive.offspot.it
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: drive-service
            port:
              name: http
