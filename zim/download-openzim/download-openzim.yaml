apiVersion: v1
kind: ConfigMap
metadata:
  name: download-openzim-configs
  namespace: zim
data:
  vhost.conf: |
    map_hash_max_size 2048;
    map_hash_bucket_size 256;
    map $uri $redirect_uri {
        include /data/maps/wp1.map;
        include /data/maps/openzim-releases.map;
        include /data/maps/openzim-nightly.map;
    }

    server {
      listen 80;
      server_name _;
      access_log /var/log/nginx/access.log vhost;
      access_log /dev/stdout vhost;
      root /var/www/download.openzim.org;
      default_type application/octet-stream;
      autoindex on;
      autoindex_exact_size off;
      autoindex_localtime off;
      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
          root   /usr/share/nginx/html;
      }
      location = /README {
        types { } default_type "text/plain; charset=utf-8";
      }
      location / {
        if ($redirect_uri) {
          add_header Cache-Control "no-store, no-cache, must-revalidate";
          rewrite ^ $redirect_uri permanent;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: zim
  labels:
    app: download-openzim-app
  name: download-openzim-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: download-openzim-app
  template:
    metadata:
      labels:
        app: download-openzim-app
    spec:
      shareProcessNamespace: true
      containers:
      - image: docker.io/library/bash:5-alpine3.15
        imagePullPolicy: IfNotPresent
        name: reloader
        # reload nginx config every hour at *:10
        command: ["crond", "-f"]
        volumeMounts:
        - name: nginx-configs-scripts
          mountPath: "/usr/bin/reload-nginx"
          subPath: reload-nginx.sh
          readOnly: true
        - name: nginx-configs-scripts
          mountPath: "/etc/crontabs/root"
          subPath: reload-nginx.crontab
          readOnly: true
      - image: docker.io/nginx:1.21
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/data/maps"
          name: maps-volume
          readOnly: true
        - mountPath: "/var/www/download.openzim.org"
          name: openzim-volume
          readOnly: true
        - name: configs
          mountPath: "/etc/nginx/conf.d/default.conf"
          subPath: vhost.conf
          readOnly: true
        - name: nginx-configs
          mountPath: "/etc/nginx/mime.types"
          subPath: mime.types
          readOnly: true
        - name: nginx-configs
          mountPath: "/etc/nginx/conf.d/gzip.conf"
          subPath: gzip.conf
          readOnly: true
        - name: nginx-configs
          mountPath: "/etc/nginx/conf.d/01vhost-logfmt.conf"
          subPath: vhost-logfmt.conf
          readOnly: true
        - mountPath: "/var/log/nginx"
          subPath: download-openzim
          name: nginx-logs-volume
          readOnly: false
        resources:
          requests:
            memory: "20Mi"
            cpu: "1m"
      volumes:
      - name: openzim-volume
        persistentVolumeClaim:
          claimName: openzim-download-pvc
      - name: maps-volume
        persistentVolumeClaim:
          claimName: maps-pvc
      - name: nginx-logs-volume
        persistentVolumeClaim:
          claimName: nginx-logs-pvc
      - name: configs
        configMap:
          name: download-openzim-configs
      - name: nginx-configs
        configMap:
          name: nginx-configs
      - name: nginx-configs-scripts
        configMap:
          name: nginx-configs
          defaultMode: 0755
      nodeSelector:
        k8s.kiwix.org/role: "storage"
---
apiVersion: v1
kind: Service
metadata:
  namespace: zim
  name: download-openzim-service
  labels:
    app: download-openzim-app
spec:
  selector:
    app: download-openzim-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: download-openzim-ingress
  namespace: zim
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-redirect-from: "http://download.openzim.org/"
    nginx.ingress.kubernetes.io/proxy-redirect-to: "$scheme://download.openzim.org/"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
      - download.openzim.org
      secretName: download-openzim-org-tls
  rules:
  - host: download.openzim.org
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: download-openzim-service
            port:
              number: 80
